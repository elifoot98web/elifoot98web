# Simple workflow for deploying static content to GitHub Pages
name: Deploy to GitHub pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment and tag creation
permissions:
  contents: write  # needed to push tags
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"

jobs:
  # Single deploy job since we're just deploying
  build_and_deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0  # required for tag creation

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'  # or your preferred version

      - name: Install dependencies and build
        run: npm ci && npm run build:githubpages

      - name: Create 404 page
        run: cp www/index.html www/404.html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload www folder
          path: 'www'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Tag deployed version
        if: success()  # only tag if all previous steps succeeded
        run: |
          VERSION=$(node -p "require('./package.json').version")
          TAG_NAME="v$VERSION"
          echo "Tagging version: $TAG_NAME"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Only tag if it doesn't already exist
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists. Skipping."
          else
            git tag "$TAG_NAME"
            git push origin "$TAG_NAME"
          fi
